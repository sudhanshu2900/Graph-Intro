PROGRAM:

#include<bits/stdc++.h>
using namespace std;

class Graph{
    unordered_map<int, list<pair<int,int>>> l;
    
    public:
    void addEdge(int u, int v, bool bidir, int wt){
        l[u].push_back(make_pair(v,wt));
        if(bidir){
            l[v].push_back(make_pair(u,wt));
        }
    }
    
    void printEdge(){
        for(auto i:l){
            int node = i.first;
            list<pair<int, int>> DestNode = i.second;
            cout<<node<<"->";
            
            for(auto j:DestNode){
                int FirstPart = j.first;
                int SecondPart = j.second;
                
                cout<<"("<<FirstPart<<","<<SecondPart<<")"<<",";
            }
            cout<<endl;
        }
    }
};

int main()
{
    Graph g;
    g.addEdge(1,2,true,20);
    g.addEdge(1,3,true,10);
    g.addEdge(1,4,false,50);
    g.addEdge(3,4,true,40);
    g.addEdge(2,4,true,40);
    
    g.printEdge();
    
    return 0;
}




OUTPUT:

4->(3,40),(2,40),
3->(1,10),(4,40),
1->(2,20),(3,10),(4,50),
2->(1,20),(4,40),


